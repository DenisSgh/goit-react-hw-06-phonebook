{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","_","combineReducers","rootReducer","contacts","reducer","store","configureStore","getContacts","getFilter","getVisibleContacts","setItem","stringify","normalizedFilter","toLowerCase","includes","Section","title","children","className","styles","section","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleCreateContact","e","currentTarget","value","reset","nameId","numberId","s","form","onSubmit","preventDefault","find","alert","htmlFor","type","onChange","pattern","required","button","Filter","label","input","placeholder","Contacts","length","list","map","item","position","onClick","notification","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.451d5523.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3t8-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__4eV3X\",\"button\":\"Form_button__2wvc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__FcRKz\",\"input\":\"Filter_input__2NBAn\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/filter');\n\nexport { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './actions';\n\nconst items = createReducer(\n  JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [deleteContact]: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport reducer from './reducer';\n\nconst rootReducer = combineReducers({ contacts: reducer });\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  window.localStorage.setItem('contacts', JSON.stringify(contacts));\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { getContacts } from 'redux/selectors';\r\nimport { addContact } from 'redux/actions';\r\nimport Section from 'components/Section';\r\n\r\n// import PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   addContact: contact => dispatch(addContact(contact)),\r\n// });\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreateContact = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n\r\n      case 'number':\r\n        return setNumber(value);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in the contact list`);\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  return (\r\n    <Section title=\"Phonebook\">\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleCreateContact}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={nameId}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={numberId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleCreateContact}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={numberId}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add new contact\r\n        </button>\r\n      </form>\r\n    </Section>\r\n  );\r\n};\r\n\r\n// Form.propTypes = {\r\n// contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n// addContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Form;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from 'redux/actions';\r\nimport { getFilter } from 'redux/selectors';\r\n\r\n// import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"Type contact name\"\r\n        value={filter}\r\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n// filter: PropTypes.string.isRequired,\r\n// changeFilter: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Filter;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/selectors';\r\nimport { deleteContact } from 'redux/actions';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport Section from 'components/Section';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contacts = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Section title=\"Contacts\">\r\n      {contacts.length !== 0 ? (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <li className={s.item} key={id}>\r\n                <div className={s.position}>\r\n                  <span>{name}:</span>\r\n                  <span>{number}</span>\r\n                </div>\r\n                <button\r\n                  className={s.button}\r\n                  type=\"button\"\r\n                  onClick={() => dispatch(deleteContact(id))}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p className={s.notification}>No contacts found :(</p>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\n// Contacts.propTypes = {\r\n// contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n// deleteContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Contacts;\r\n","import Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nexport default function App() {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3m_hX\",\"item\":\"Contacts_item__1FkhT\",\"button\":\"Contacts_button__383vt\",\"notification\":\"Contacts_notification__1oeQk\",\"position\":\"Contacts_position__3e_4J\"};"],"sourceRoot":""}