{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","redux/actionTypes.js","redux/reducer.js","redux/store.js","components/Section/Section.jsx","components/Form/Form.jsx","redux/actions.js","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","ADD","DELETE","CHANGE_FILTER","combineReducers","items","state","JSON","parse","window","localStorage","getItem","type","payload","filter","contact","id","rootReducer","contacts","reducer","store","createStore","composeWithDevTools","Section","title","children","className","styles","section","connect","dispatch","addContact","name","number","shortid","generate","useState","setName","setNumber","handleCreateContact","e","currentTarget","value","reset","nameId","numberId","s","form","onSubmit","preventDefault","find","alert","htmlFor","onChange","pattern","required","button","changeFilter","query","label","input","placeholder","getVisibleContacts","setItem","stringify","normalaizedFilter","toLowerCase","includes","deleteContact","length","list","map","item","position","onClick","notification","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72078355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3t8-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__4eV3X\",\"button\":\"Form_button__2wvc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__FcRKz\",\"input\":\"Filter_input__2NBAn\"};","export const ADD = 'contacts/add';\nexport const DELETE = 'contacts/delete';\nexport const CHANGE_FILTER = 'contacts/filter';\n","import { combineReducers } from 'redux';\nimport { ADD, DELETE, CHANGE_FILTER } from './actionTypes';\n\nconst items = (\n  state = JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  { type, payload },\n) => {\n  switch (type) {\n    case ADD:\n      return [...state, payload];\n\n    case DELETE:\n      return state.filter(contact => contact.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ items, filter });\n","import { createStore } from 'redux';\nimport { combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducer';\n\nconst rootReducer = combineReducers({ contacts: reducer });\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { addContact } from 'redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'components/Section';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = ({ title, contacts, addContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleCreateContact = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n\r\n      case 'number':\r\n        return setNumber(value);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in the contact list`);\r\n    }\r\n\r\n    addContact({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  return (\r\n    <Section title={title}>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleCreateContact}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={nameId}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={numberId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleCreateContact}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={numberId}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add new contact\r\n        </button>\r\n      </form>\r\n    </Section>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: 'Phonebook',\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { ADD, DELETE, CHANGE_FILTER } from './actionTypes';\nimport shortid from 'shortid';\n\nconst addContact = ({ name, number }) => ({\n  type: ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = id => ({\n  type: DELETE,\n  payload: id,\n});\n\nconst changeFilter = query => ({\n  type: CHANGE_FILTER,\n  payload: query,\n});\n\nexport { addContact, deleteContact, changeFilter };\n","import { connect } from 'react-redux';\r\nimport { changeFilter } from 'redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"Type contact name\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: e => dispatch(changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { connect } from 'react-redux';\r\nimport { deleteContact } from 'redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Section from 'components/Section';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contacts = ({ title, contacts, deleteContact }) => {\r\n  return (\r\n    <Section title={title}>\r\n      {contacts.length !== 0 ? (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <li className={s.item} key={id}>\r\n                <div className={s.position}>\r\n                  <span>{name}:</span>\r\n                  <span>{number}</span>\r\n                </div>\r\n                <button\r\n                  className={s.button}\r\n                  type=\"button\"\r\n                  onClick={() => deleteContact(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p className={s.notification}>No contacts found :(</p>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n  window.localStorage.setItem('contacts', JSON.stringify(items));\r\n\r\n  const normalaizedFilter = filter.toLowerCase();\r\n  return items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalaizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  title: 'Contacts',\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nexport default function App() {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3m_hX\",\"item\":\"Contacts_item__1FkhT\",\"button\":\"Contacts_button__383vt\",\"notification\":\"Contacts_notification__1oeQk\",\"position\":\"Contacts_position__3e_4J\"};"],"sourceRoot":""}