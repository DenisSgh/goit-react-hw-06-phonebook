{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Contacts/Contacts.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","Form","contacts","onSubmit","useState","name","setName","number","setNumber","handleCreateContact","e","currentTarget","value","reset","nameId","shortid","generate","numberId","s","form","preventDefault","find","contact","alert","htmlFor","type","onChange","pattern","id","required","button","Filter","changeFilter","label","input","placeholder","Contacts","buttonDelete","length","list","map","item","position","onClick","notification","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","data","newContact","prev","normalaizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c84bae00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__4eV3X\",\"button\":\"Form_button__2wvc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__FcRKz\",\"input\":\"Filter_input__2NBAn\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'components/Section';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form({ title, contacts, onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleCreateContact = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n\r\n      case 'number':\r\n        return setNumber(value);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in the contact list`);\r\n    }\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  return (\r\n    <Section title={title}>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleCreateContact}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={nameId}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={numberId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleCreateContact}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={numberId}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add new contact\r\n        </button>\r\n      </form>\r\n    </Section>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"Type contact name\"\r\n        value={value}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Section from 'components/Section';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contacts = ({ title, contacts, buttonDelete }) => {\r\n  return (\r\n    <Section title={title}>\r\n      {contacts.length !== 0 ? (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <li className={s.item} key={id}>\r\n                <div className={s.position}>\r\n                  <span>{name}:</span>\r\n                  <span>{number}</span>\r\n                </div>\r\n                <button\r\n                  className={s.button}\r\n                  type=\"button\"\r\n                  onClick={() => buttonDelete(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p className={s.notification}>No contacts found :(</p>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  buttonDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmitContact = data => {\n    const { name, number } = data;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts(prev => [...prev, newContact]);\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleContacts = () => {\n    const normalaizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalaizedFilter),\n    );\n  };\n\n  return (\n    <>\n      <Form\n        title=\"Phonebook\"\n        contacts={contacts}\n        onSubmit={handleSubmitContact}\n      />\n      <Filter value={filter} changeFilter={changeFilter} />\n      <Contacts\n        title=\"Contacts\"\n        contacts={visibleContacts()}\n        buttonDelete={deleteContact}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3m_hX\",\"item\":\"Contacts_item__1FkhT\",\"button\":\"Contacts_button__383vt\",\"notification\":\"Contacts_notification__1oeQk\",\"position\":\"Contacts_position__3e_4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3t8-Q\"};"],"sourceRoot":""}